version: "3.9"

services:
    php:
        build:
            context: .docker
            dockerfile: Dockerfile-php-amd64
        image: aprobare_facturi
        container_name: aprobare_facturi_php
        ports:
            - '${APP_PORT:-80}:80'
            - '${APP_SECURE_PORT:-443}:443'
            - '${VITE_PORT:-5173}:5173'
            - '${VITE_PORT_CRUDHUB:-5174}:5174'
        volumes:
            - './:/app:delegated'
            - '.docker/php.ini:/etc/php/8.2/fpm/conf.d/php.ini:cached'
            - '.docker/php.ini:/etc/php/8.2/cli/conf.d/php.ini:cached'
            - '.docker/www.conf:/etc/php/8.2/fpm/pool.d/www.conf:cached'
            - '.docker/nginx.conf:/etc/nginx/templates/default.conf.tpl:cached'
            - '.docker/certs:/etc/nginx/certs:cached'
        depends_on:
            - mariadb
            - redis
        networks:
            - aprobare_facturi

    node:
        build:
            context: .
            dockerfile: .docker/Dockerfile-node
        image: node:18-alpine
        container_name: aprobare_facturi_node
        volumes:
            - '.:/app'
            - '/app/node_modules'
        entrypoint: ['.docker/entrypoint-node.sh']
        depends_on:
            - php
        networks:
            - aprobare_facturi

    mariadb:
        image: mariadb:10
        container_name: aprobare_facturi_mariadb
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        networks:
            - aprobare_facturi
        volumes:
            - 'mariadb:/var/lib/mysql:cached'

    redis:
        image: redis:alpine
        container_name: aprobare_facturi_redis
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        networks:
            - aprobare_facturi
        volumes:
            - 'redis:/data:cached'
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]

volumes:
    mariadb:
        driver: local
    redis:
        driver: local

networks:
    aprobare_facturi:
        driver: bridge
        name: aprobare_facturi
